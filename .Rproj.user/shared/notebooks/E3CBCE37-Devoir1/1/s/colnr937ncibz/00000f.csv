"0","library(class)"
"0",""
"0","# Sélection des variables pour la prédiction"
"0","features <- c(""total_votes"", ""total_blancs"", ""pourcentage_blanc"", ""total_abs"", ""pourcentage_abs"", ""total_arthaud"", ""pourcentage_arthaud"", ""total_roussel"", ""pourcentage_roussel"", ""total_macron"", ""pourcentage_macron"", ""total_lassalle"", ""pourcentage_lassalle"", ""total_lepen"", ""pourcentage_lepen"", ""total_zemmour"", ""pourcentage_zemmour"", ""total_melenchon"", ""pourcentage_melenchon"", ""total_hidalgo"", ""pourcentage_hidalgo"", ""total_jadot"", ""pourcentage_jadot"", ""total_pecresse"", ""pourcentage_pecresse"", ""total_poutou"", ""pourcentage_poutou"", ""total_dupontaignan"", ""pourcentage_dupontaignan"")"
"0",""
"0","# Création d'une nouvelle colonne 'candidat_gagnant' basée sur le pourcentage le plus élevé"
"0","dataset_cleaned$candidat_gagnant <- apply(dataset_cleaned[, grep(""pourcentage_"", names(dataset_cleaned))], 1, function(x) names(x)[which.max(x)])"
"0",""
"0","# Séparation des données en ensembles d'entraînement et de test"
"0","set.seed(123)"
"0","train_indices <- sample(nrow(dataset_cleaned), nrow(dataset_cleaned) * 0.7)"
"0","train_data <- dataset_cleaned[train_indices, ]"
"0","test_data <- dataset_cleaned[-train_indices, ]"
"0",""
"0","# Entraînement du modèle KNN"
"0","k <- 3"
"0","knn_model <- knn(train = train_data[, features], "
"0","                 test = test_data[, features], "
"0","                 cl = train_data$candidat_gagnant, "
"0","                 k = k)"
"0",""
"0","# Évaluation des performances"
"0","accuracy <- sum(knn_model == test_data$candidat_gagnant) / length(test_data$candidat_gagnant)"
"0","cat(""Précision du modèle KNN :"", round(accuracy * 100, 2), ""%\n"")"
"1","Précision du modèle KNN :"
"1"," "
"1","60.61"
"1"," "
"1","%
"
